# https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
apiVersion: batch/v1
kind: CronJob
metadata:
  name: nodc-manager-cronjob
  namespace: nodc
  labels:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: manager
spec:
  # https://crontab.guru/
  # Keep in mind this is server (k8s provide) time not your time. 
  # There is beta feature to plan using Time zones yet not in stable:
  # https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#time-zones
  # By default the time is in UTC+0
  schedule: "7 21 * * *"  
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
            - name: nodc-linkedpipes-volume
              persistentVolumeClaim:
                claimName: nodc-linkedpipes-storage-pvc
            - name: nodc-registration-volume
              persistentVolumeClaim:
                claimName: nodc-registration-pvc
          containers:
          - name: nodc-linkedpipes-executor
            image: ghcr.io/datova-kancelaria/nodc_manager:develop
            imagePullPolicy: Always
            env:
              - name: STORAGE_REPOSITORY
                valueFrom:
                  configMapKeyRef:
                    name: nodc-configuration
                    key: manager.pipelineRepository
              - name: STORAGE_URL
                value: "http://nodc-storage:8083"
              - name: STORAGE_REPOSITORY_BRANCH
                value: "develop"
              - name: FRONTEND_URL
                value: "http://nodc-frontend:8080"
              - name: PIPELINE_URL
                valueFrom:
                  configMapKeyRef:
                    name: nodc-configuration
                    key: manager.pipelineToExecute
              - name: REGISTRATION_REPOSITORY
                valueFrom:
                  configMapKeyRef:
                    name: nodc-configuration
                    key: manager.registrationRepository
              - name: REGISTRATION_REPOSITORY_BRANCH
                value: "develop"
            volumeMounts:
              - mountPath: "/data/lp-etl/"
                name: nodc-linkedpipes-volume
              - mountPath: "/data/registration/"
                name: nodc-registration-volume
          restartPolicy: OnFailure
          initContainers:
            - name: set-storage-ownership
              image: alpine:3.17.0
              command: ["chown", "5987:5987", "/data/lp-etl/"]
              volumeMounts:
                - mountPath: "/data/lp-etl/"
                  name: nodc-linkedpipes-volume
            - name: set-registration-ownership
              image: alpine:3.17.0
              command:
                - "chown"
                - "5987:5987"
                - "/data/registration/"
              volumeMounts:
                - mountPath: "/data/registration/"
                  name: nodc-registration-volume
