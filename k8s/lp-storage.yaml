apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodc-storage-deployment
  labels:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: linkedpipes.storage
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nodc
      app.kubernetes.io/component: linkedpipes.storage
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nodc
        app.kubernetes.io/component: linkedpipes.storage
    spec:
      securityContext:
        fsGroup: 5987
      volumes:
        - name: nodc-storage-volume
          persistentVolumeClaim:
            claimName: nodc-linkedpipes-claim
      containers:
        - name: nodc-linkedpipes-storage
          image: linkedpipes/etl-storage:develop
          imagePullPolicy: Always
          env:
            - name: LP_ETL_DOMAIN
              value: "http://localhost:8080"
            - name: LP_ETL_MONITOR_URL
              value: "http://nodc-executor-monitor:8081"
          ports:
            - containerPort: 8083
          volumeMounts:
            - mountPath: "/data/lp-etl/"
              name: nodc-storage-volume
          securityContext:
            runAsUser: 5987
            runAsGroup: 5987
            runAsNonRoot: true
      initContainers:
        - name: set-data-ownership
          image: alpine:3.17.0
          command: ["chown", "5987:5987", "/data/lp-etl/"]
          volumeMounts:
            - mountPath: "/data/lp-etl/"
              name: nodc-storage-volume
---
apiVersion: v1
kind: Service
metadata:
  name: nodc-storage
  labels:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: linkedpipes.storage
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: linkedpipes.storage
  ports:
  - protocol: TCP
    targetPort: 8083
    port: 8083

