# https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
apiVersion: batch/v1
kind: CronJob
metadata:
  name: nodc-certificate-manager-cronjob
  namespace: nodc
  labels:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: certificate-manager
spec:
  # https://crontab.guru/
  # Keep in mind this is server (k8s provide) time not your time. 
  # There is beta feature to plan using Time zones yet not in stable:
  # https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#time-zones
  # By default the time is in UTC+0
  schedule: "5 4 * * *"  
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 3
  jobTemplate: 
    spec:
      template:
        spec:
          labels:
            app.kubernetes.io/name: nodc
            app.kubernetes.io/component: certificate-manager
          volumes:
            - name: nodc-certificate
              persistentVolumeClaim:
                claimName: nodc-certificate-pvc
          containers:
            - name: certificate-manager
              image: ghcr.io/datova-kancelaria/nodc_certificate-manager:latest
              args: ["update.sh"]
              imagePullPolicy: Always
              ports:
                - containerPort: 80
              volumeMounts:
                - name: nodc-certificate
                  mountPath: /opt/letsencrypt/
              env:
                - name: EMAIL
                  valueFrom:
                    configMapKeyRef:
                      name: nodc-configuration
                      key: letsencrypt.email
                - name: DOMAIN
                  valueFrom:
                    configMapKeyRef:
                      name: nodc-configuration
                      key: letsencrypt.domain
          restartPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  name: nodc-certificate-manager
  labels:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: certificate-manager
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: certificate-manager
  ports:
  - protocol: TCP
    targetPort: 80
    port: 80
