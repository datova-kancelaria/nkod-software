apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodc-graphdb-deployment
  namespace: nodc
  labels:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: graphdb
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nodc
      app.kubernetes.io/component: graphdb
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nodc
        app.kubernetes.io/component: graphdb
    spec:
      volumes:
        - name: nodc-graphdb-volume
          persistentVolumeClaim:
            claimName: nodc-graphdb-pvc
      containers:
        - name: nodc-graphdb
          image: fra.ocir.io/frcivyrwah5e/graphdb:10.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 7200
          volumeMounts:
            - mountPath: "/data/graphdb"
              name: nodc-graphdb-volume
          env:
            - name: GRAPHDB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nodc-secret
                  key: graphdb.admin.password
                  optional: false
            - name: GRAPHDB_USER
              value: lp-etl
            - name: GRAPHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nodc-secret
                  key: graphdb.password
                  optional: false
            - name: GRAPHDB_EXTERNAL_URL
              valueFrom:
                configMapKeyRef:
                  name: nodc-configuration
                  key: graphdb.publicUrl
          securityContext:
            runAsUser: 5987
            runAsGroup: 5987
            runAsNonRoot: true
      imagePullSecrets:
        - name: oci-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: nodc-graphdb
  labels:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: graphdb
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: nodc
    app.kubernetes.io/component: graphdb
  ports:
  - protocol: TCP
    targetPort: 7200
    port: 7200
