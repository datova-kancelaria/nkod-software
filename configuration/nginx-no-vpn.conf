server {
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    charset utf-8;

    # SSL START
    ssl_certificate /etc/certs/letsencrypt/live/nodc/fullchain.pem ;
    ssl_certificate_key /etc/certs/letsencrypt/live/nodc/privkey.pem ;

    include ./ssl.conf;
    # SSL END

    index index.html;

    # This is not public facing server, so we can not
    # redirect using absolute paths. Yet the relative redirect start with
    # '/' which may break if running in sub-path. This is handled
    # by special location rules below.
    absolute_redirect off;

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    location /api/sparql {
        include ./cors.conf;

        proxy_pass http://nodc-graphdb:7200/repositories/nodc;
        proxy_pass_request_headers on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location /subor/ {
        alias /data/website/;
    }
    
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ $uri.html =404;
    }

    # NO VPN SECTION

    location /etl {
       return 301 ./etl/;
    }

    location /etl/ {
        include cors.conf;

        proxy_pass http://nodc-frontend:8080/;
        proxy_pass_request_headers on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

}
